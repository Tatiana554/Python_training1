# Generated by Selenium IDE
import pytest
import json
from selenium import webdriver
from group import Group # импортирвание класса из другой папки group
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestaddgroup():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_add_group(self):
    self.open_home_page()
    self.login(username ="admin",password ="secret")
    self.open_groups_page()
    # Создание объекта типа Group ↓ ( в скобках это параметры объекта передаваемые в его конструктор)
    # и поскольку объект Group в отдельном файле group, вначале этого файла делаем импорт
    self.create_group(Group(name = "название" ,header ="444",footer ="555"))
    self.return_to_groups_page()
    self.logout()

    def test_add_empty_group(self):
      self.open_home_page()
      self.login(username="admin", password="secret") # login это метод ( в скобках параметры этого метода)
      self.open_groups_page()
      self.create_group(Group(name="", header="", footer=""))
      self.return_to_groups_page()
      self.logout()

  def logout(self):
    # логаут
    self.driver.find_element(By.LINK_TEXT, "Logout").click()

  def return_to_groups_page(self):
    # возврат на страницу со списком групп
    self.driver.find_element(By.LINK_TEXT, "group page").click()

  def create_group(self, group): # reate_group это метод, group это параметр метода один вместо трех
    # создание новой группы
    self.driver.find_element(By.NAME, "new").click()
    # открытие формы и её заполнение
    self.driver.find_element(By.NAME, "group_name").click()
    self.driver.find_element(By.NAME, "group_name").send_keys(group.name) # group.nam это свойства параметра объекта group
    self.driver.find_element(By.NAME, "group_header").click()
    self.driver.find_element(By.NAME, "group_header").send_keys(group.header) # group.header это свойства параметра объекта group
    self.driver.find_element(By.NAME, "group_footer").click()
    self.driver.find_element(By.NAME, "group_footer").send_keys(group.footer) # group.footer это свойства параметра объекта group
    # создание группы (сохранение)
    self.driver.find_element(By.NAME, "submit").click()

  def open_groups_page(self):
    # открывается страница с гуппами
    self.driver.find_element(By.LINK_TEXT, "groups").click()

  def login(self, username, password):
    # логинимся
    self.driver.set_window_size(1232, 1043)
    self.driver.find_element(By.NAME, "user").click()
    self.driver.find_element(By.NAME, "user").send_keys(username)
    self.driver.find_element(By.NAME, "pass").send_keys(password)
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(7)").click()

  def open_home_page(self):
    # открытие главной страницы
    self.driver.get("http://localhost/addressbook/")
  
  
